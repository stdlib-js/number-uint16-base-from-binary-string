{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport format from '@stdlib/error-tools-fmtprodmsg' ;\nimport pow from '@stdlib/math-base-special-pow' ;\n\n\n// VARIABLES //\n\nvar NBITS = 16;\n\n\n// MAIN //\n\n/**\n* Creates an unsigned 16-bit integer from a literal bit representation.\n*\n* @param {BinaryString} bstr - string which is a literal bit representation\n* @throws {Error} must provide a string with a length equal to `16`\n* @returns {uinteger16} unsigned 16-bit integer\n*\n* @example\n* var bstr = '0101010101010101';\n* var val = fromBinaryStringUint16( bstr );\n* // returns 21845\n*\n* @example\n* var bstr = '0000000000000000';\n* var val = fromBinaryStringUint16( bstr );\n* // returns 0\n*\n* @example\n* var bstr = '0000000000000010';\n* var val = fromBinaryStringUint16( bstr );\n* // returns 2\n*\n* @example\n* var bstr = '1111111111111111';\n* var val = fromBinaryStringUint16( bstr );\n* // returns 65535\n*/\nfunction fromBinaryStringUint16( bstr ) {\n\tvar sum;\n\tvar i;\n\tif ( bstr.length !== NBITS ) {\n\t\tthrow new Error( format( 'invalid argument. Input string must have a length equal to %u. Value: `%s`.', NBITS, bstr ) );\n\t}\n\tsum = 0;\n\tfor ( i = 0; i < bstr.length; i++ ) {\n\t\tif ( bstr[ i ] === '1' ) {\n\t\t\tsum += pow( 2, (NBITS-i-1) );\n\t\t}\n\t}\n\treturn sum;\n}\n\n\n// EXPORTS //\n\nexport default fromBinaryStringUint16;\n"],"names":["fromBinaryStringUint16","bstr","sum","i","length","Error","format","pow"],"mappings":";;mLA4DA,SAASA,EAAwBC,GAChC,IAAIC,EACAC,EACJ,GAnCW,KAmCNF,EAAKG,OACT,MAAM,IAAIC,MAAOC,EAAQ,8EApCf,GAoCqGL,IAGhH,IADAC,EAAM,EACAC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IACV,MAAdF,EAAME,KACVD,GAAOK,EAAK,EAzCH,GAyCaJ,EAAE,IAG1B,OAAOD"}